<div class="flex w-full min-h-dvh">
    {{> editor/settings fileLink=fileLink}}
    <div class="divider divider-horizontal"></div>
    <div class="flex-1 flex flex-col">
        {{> utils/fileLink fileLink=fileLink}}
        <div class="divider divider-vertical"></div>
        <form action="/editFile" method="POST" class="flex-1 flex flex-col gap-4">
            <div id="editor" class="flex focus-within:outline focus-within:outline-2 focus-within:outline-blue-400">
                <div class="numbers flex flex-col w-12 px-1" id="numbers"></div>
                <textarea
                    class="flex-1 resize-none whitespace-pre focus:outline-none"
                    id="textarea"
                    oninput="onUpdate(event.target.value)"
                    name="fileContent"
                    spellcheck="false"
                >{{file}}</textarea>
                <input type="hidden" name="fileLink" value={{fileLink}} />
            </div>
            <button type="submit" class="btn btn-primary">save file</button>
        </form>
    </div>
</div>

<script>
    let config = {
        theme: 'light',
        fontSize: 16,
    }

    async function loadConfig() {
        const link = `${window.location.origin}/getConfig`;
        config = await (await fetch(link)).json();

        const themeSelect = document.querySelector('#themeSelect');
        themeSelect.value = config.theme;

        onLoad();
    }

    function onLoad() {
        const editor = document.querySelector('#editor');
        const numbers = document.querySelector('#numbers');
        const textarea = document.querySelector('#textarea');

        update();

        const lines = textarea.value.split('\n').length;
        setLines(lines);
    }

    function onUpdate(value) {
        const textarea = document.querySelector('#textarea');

        const lines = textarea.value.split('\n').length;
        setLines(lines);
    }

    function setLines(lines) {
        const editor = document.querySelector('#editor');
        const numbers = document.querySelector('#numbers');

        editor.style.height = `${config.fontSize * 1.5 * lines}px`;

        numbers.innerHTML = '';

        for (let i = 1; i < lines + 1; i++) {
            const number = document.createElement('span');
            number.innerText = i;
            numbers.appendChild(number);
        }
    }

    function update() {
        const editor = document.querySelector('#editor');
        const textarea = document.querySelector('#textarea');

        const lines = textarea.value.split('\n').length;
        
        editor.setAttribute('data-theme', config.theme);
        editor.style.fontSize = `${config.fontSize}px`;
        editor.style.height = `${config.fontSize * 1.5 * lines}px`;
    }

    function increaseFontSize() {
        config.fontSize += 1;
        update();
    }

    function decreaseFontSize() {
        config.fontSize -= 1;
        update();
    }

    function changeTheme(theme) {
        config.theme = theme;
        update();
    }

    async function saveConfig() {
        const link = `${window.location.origin}/setConfig`;
        await fetch(link, {
            method: 'POST',
            headers: {
                "Content-Type": "application/json",
            },
            body: JSON.stringify(config),
        })
    }

    loadConfig();
</script>
